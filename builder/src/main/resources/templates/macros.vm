#macro(javaMethodSignature $action)
	#set ($returnType = $languageUtil.getReturnType($action.response))
	#set ($methodName = $languageUtil.getMethodName($action.path))
	#set ($parameters = $action.parameters)
	#set ($parameterList = "")

	#foreach ($parameter in $parameters)
		#set ($parameterName = $parameter.name)
		#set ($parameterType = $languageUtil.getType($parameter.type))
		#set ($parameterList = "$parameterList$parameterType $parameterName")

		#if ($foreach.hasNext)
			#set ($parameterList = "$parameterList, ")
		#end
	#end

	public $returnType $methodName($parameterList) throws Exception {
#end

#macro(objectiveCMethodSignature $action $suffix $isHeaderFile)
	#set ($returnType = $languageUtil.getReturnType($action.response))
	#set ($methodName = $languageUtil.getMethodName($action.path))
	#set ($parameters = $action.parameters)
	#set ($parameterList = "")

	#if ($parameters.size() == 0)
		#set ($suffix = ":(NSError **)error$suffix")
	#else
		#set ($suffix = " error:(NSError **)error$suffix")
	#end

	## Methods that returns void are converted to swift with a NSErrorPointer instead of throws
	## this forces the compiler to convert the error into throws
	#if ($returnType == "void" && $isHeaderFile == "true")
		#set ($suffixLength = $suffix.length() - 1)
		#set ($suffix = "$suffix.substring(0, $suffixLength) CONVERT_ERROR_TO_THROWS;")
	#end

	#foreach ($parameter in $parameters)
		#set ($parameterName = $parameter.name)
		#set ($parameterType = $languageUtil.getType($parameter.type))

		#set ($prefix = " $parameterName:")

		#if ($velocityCount == 1)
			#set ($prefix = "With$languageUtil.capitalize($parameterName):")
		#end

		#set ($parameterList = "$parameterList$prefix($parameterType)$parameterName")
	#end

	- ($returnType)$methodName$parameterList$suffix
#end