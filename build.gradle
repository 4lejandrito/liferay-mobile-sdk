subprojects {
    repositories {
        mavenCentral()
    }
}

configure(subprojects.findAll { it.name != 'ios' }) {
	repositories {
		maven {
			url 'https://repository.liferay.com/nexus/content/groups/liferay-ce'
		}
	}

	configurations {
		formatter
	}

	dependencies {
		formatter group: 'com.liferay.portal', name: 'portal-impl', version: '6.2.0-ga1'
		formatter group: 'com.liferay.portal', name: 'portal-service', version: '6.2.0-ga1'
		formatter group: 'com.liferay.portal', name: 'util-java', version: '6.2.0-ga1'
		formatter group: 'dom4j', name: 'dom4j', version: '1.6.1'
		formatter group: 'org.apache.ant', name: 'ant', version: '1.8.2'
	}

	task format(type: JavaExec) {
		main = 'com.liferay.portal.tools.sourceformatter.SourceFormatter'
		classpath = configurations.formatter
		workingDir = 'src/main/java'
	}
}

configure(subprojects.findAll { it.name != 'builder' }) {
	configurations {
		builder
	}

	dependencies {
		builder project(':builder')
	}

	ext {
		builderMainClass = 'com.liferay.mobile.sdk.SDKBuilder'
		builderClasspath = configurations.builder
		platform = project.name
	}

	task buildSyncWebService(type: JavaExec) {
		main = builderMainClass
		classpath = builderClasspath

		args 'platform=' + platform
		args 'url=' + url
		args 'context=sync-web'
		args 'filter=' + filter
		args 'packageName=' + packageName
		args 'destination=' + destination
	}

	task buildService(type: JavaExec, dependsOn: buildSyncWebService) {
		main = builderMainClass
		classpath = builderClasspath

		args 'platform=' + platform
		args 'url=' + url
		args 'context=' + context
		args 'filter=' + filter
		args 'packageName=' + packageName
		args 'destination=' + destination
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}